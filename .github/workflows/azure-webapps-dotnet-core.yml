# This workflow will build and push a .NET Core app to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-dotnetcore?tabs=net60&pivots=development-environment-vscode
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the value for the AZURE_WEBAPP_NAME. Optionally, change the PACKAGE_PATH and DOTNET_VERSION environment variables below.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

name: Build and deploy ASP.Net Core 6.0 app to existing Azure App Service

env:
  AZURE_WEBAPP_NAME: Brent-WeatherAspNet    # set this to the name of your Azure Web App
  AZURE_WEBAPI_NAME: Brent-WeatherWebApi    # set this to the name of your Azure Web App
  AZURE_IDSERVER_NAME: Brent-IdentityServer    # set this to the name of your Azure Web App
  WEBAPP_PROJECT_NAME: "WeatherAspNet"
  WEBAPI_PROJECT_NAME: "WeatherWebApi"
  IDSERVER_PROJECT_NAME: "IdentityServer"
  PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '7.0'                 # set this to the .NET Core version to use
  BUILD_CONFIGURATION: Debug

on:
  push:
    branches:
      - "main"
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-deploy-webapp:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      
      - name: Set up dependency caching for faster builds
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: dotnet publish
        run: |
            dotnet publish ${{ env.WEBAPP_PROJECT_NAME }} -c ${{ env.BUILD_CONFIGURATION }} -o '${{ env.PACKAGE_PATH }}/${{ env.WEBAPP_PROJECT_NAME }}'
            dotnet publish ${{ env.WEBAPI_PROJECT_NAME }} -c ${{ env.BUILD_CONFIGURATION }} -o '${{ env.PACKAGE_PATH }}/${{ env.WEBAPI_PROJECT_NAME }}'
            dotnet publish ${{ env.IDSERVER_PROJECT_NAME }} -c ${{ env.BUILD_CONFIGURATION }} -o '${{ env.PACKAGE_PATH }}/${{ env.IDSERVER_PROJECT_NAME }}'

      - uses: azure/login@v1
        with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
    
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
            app-name: ${{ env.AZURE_WEBAPP_NAME }}
            package: '${{ env.PACKAGE_PATH }}/${{ env.WEBAPP_PROJECT_NAME }}'

      - name: Deploy to Azure Web Api
        id: deploy-to-webapi
        uses: azure/webapps-deploy@v2
        with:
            app-name: ${{ env.AZURE_WEBAPI_NAME }}
            package: '${{ env.PACKAGE_PATH }}/${{ env.WEBAPI_PROJECT_NAME }}'

      - name: Deploy to Azure Identity Server
        id: deploy-to-idserver
        uses: azure/webapps-deploy@v2
        with:
            app-name: ${{ env.AZURE_IDSERVER_NAME }}
            package: '${{ env.PACKAGE_PATH }}/${{ env.IDSERVER_PROJECT_NAME }}'

      - name: az cli logout
        run: az logout
      
