{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appServiceName": {
      "type": "string",
      "defaultValue": "fromParametersFile",
      "minLength": 2,
      "metadata": {
        "description": "Web app name."
      }
    },
    "apiAppServiceName": {
      "type": "string",
      "defaultValue": "fromParametersFile",
      "minLength": 2,
      "metadata": {
        "description": "Web api name."
      }
    },
    "identityServerAppServiceName": {
      "type": "string",
      "defaultValue": "fromParametersFile",
      "minLength": 2,
      "metadata": {
        "description": "Identity server app name."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "sku": {
      "type": "string",
      "defaultValue": "F1",
      "metadata": {
        "description": "The SKU of App Service Plan."
      }
    },
    "language": {
      "type": "string",
      "defaultValue": ".net",
      "allowedValues": [
        ".net",
        "php",
        "node",
        "html"
      ],
      "metadata": {
        "description": "The language stack of the app."
      }
    },
    "serverName": {
      "type": "string",
      "defaultValue": "fromParametersFile",
      "metadata": {
        "description": "The name of the SQL logical server."
      }
    },
    "sqlDBName": {
      "type": "string",
      "defaultValue": "AspNetIdentity",
      "metadata": {
        "description": "The name of the SQL Database."
      }
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "fromParametersFile",
      "metadata": {
        "description": "The name of the Key Vault."
      }
    }, 
    "WeatherWebApiBaseUrl": {
      "type": "string",
      "defaultValue": "fromParametersFile",
      "metadata": {
        "description": "Base Url of Weather Api."
      }
    },
    "IdentityServerBaseUrl": {
      "type": "string",
      "defaultValue": "fromParametersFile",
      "metadata": {
        "description": "Base Url of Identity Server."
      }
    },
    "sqlAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for local admin account."
      }
    },
    "sqlAdminUsername": {
      "type": "securestring",
      "metadata": {
        "description": "Password for local admin account."
      }
    }
  },
  "variables": {
    "appServicePlanPortalName": "[concat('AppServicePlan-', parameters('appServiceName'))]",
    "configReference": {
      ".net": {
        "comments": ".Net app. No additional configuration needed."
      },
      "html": {
        "comments": "HTML app. No additional configuration needed."
      },
      "php": {
        "phpVersion": "7.4"
      },
      "node": {
        "appSettings": [
          {
            "name": "WEBSITE_NODE_DEFAULT_VERSION",
            "value": "12.15.0"
          }
        ]
      }
    },
    "defaultConnectionStringSecretRef": "[concat(variables('keyVault_secretUriRoot'), 'AspNetWeatherConnectionString/')]",
    "appInsightsName": "[concat(parameters('appServiceName'), '-AppInsights')]",
    "keyVault_secretUriRoot": "[concat('https://', parameters('keyVaultName'), '.vault.azure.net/secrets/')]",
    "keyVaultAuthGoogleClientIdSecretRef": "[concat(variables('keyVault_secretUriRoot'), 'Authentication-Google-ClientId/')]",
    "keyVaultAuthGoogleClientSecretSecretRef": "[concat(variables('keyVault_secretUriRoot'), 'Authentication-Google-ClientSecret/')]",
    "keyVaultAspNetWebAppClientSecret": "[concat(variables('keyVault_secretUriRoot'), 'aspnetWebAppClientSecret/')]",
      "workspaceName": "weather-workspace"
  },
  "resources": [
    {
      "type": "microsoft.operationalinsights/workspaces",
      "apiVersion": "2020-10-01",
      "name": "[variables('workspaceName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "sku": {
          "name": "pergb2018"
        },
        "retentionInDays": "30",
        "workspaceCapping": {
          "dailyQuotaGb": -1
        },
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2021-08-01-preview",
      "name": "[parameters('serverName')]",
      "location": "[parameters('location')]",
      "properties": {
        "administratorLogin": "[parameters('sqlAdminUsername')]",
        "administratorLoginPassword": "[parameters('sqlAdminPassword')]"
      }
    },
    {
      "type": "Microsoft.Sql/servers/firewallRules",
      "apiVersion": "2015-05-01-preview",
      "name": "[concat(parameters('serverName'), '/AllowAllWindowsAzureIps')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('serverName'))]"
      ],
      "properties": {
        "startIpAddress": "0.0.0.0",
        "endIpAddress": "0.0.0.0"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "2021-08-01-preview",
      "name": "[format('{0}/{1}', parameters('serverName'), parameters('sqlDBName'))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Standard"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('serverName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2020-06-01",
      "name": "[variables('appServicePlanPortalName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('sku')]"
      }
    },
   {
            "type": "microsoft.insights/components",
            "apiVersion": "2020-02-02-preview",
            "name": "[variables('appInsightsName')]",
            "location": "[parameters('location')]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "RetentionInDays": 90,
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('workspaceName'))]"
            }
        },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2020-06-01",
      "name": "[parameters('appServiceName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanPortalName'))]"
      ],
      "properties": {
        "siteConfig": "[variables('configReference')[parameters('language')]]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanPortalName'))]"
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2022-03-01",
      "name": "[concat(parameters('appServiceName'), '/web')]",
      "location": "Central US",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
      ],
      "properties": {

        "netFrameworkVersion": "v7.0"
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2019-08-01",
      "name": "[concat(parameters('appServiceName'), '/appsettings')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]",
        "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]"
      ],
      "properties": {
        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(concat('Microsoft.Insights/components/', variables('appInsightsName'))).InstrumentationKey]",
        "APPLICATIONINSIGHTS_CONNECTION_STRING": "[reference(concat('Microsoft.Insights/components/', variables('appInsightsName'))).ConnectionString]",
        "ApplicationInsightsAgent_EXTENSION_VERSION": "~2",
        "XDT_MicrosoftApplicationInsights_Mode": "default",
        "Authentication:Google:ClientId": "[concat('@Microsoft.KeyVault(SecretUri=', variables('keyVaultAuthGoogleClientIdSecretRef'), ')')]",
        "Authentication:Google:ClientSecret": "[concat('@Microsoft.KeyVault(SecretUri=', variables('keyVaultAuthGoogleClientSecretSecretRef'), ')')]",
        "AspnetWebAppClientSecret": "[concat('@Microsoft.KeyVault(SecretUri=', variables('keyVaultAspNetWebAppClientSecret'), ')')]"
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "name": "[concat(parameters('appServiceName'), '/connectionstrings')]",
      "apiVersion": "2020-09-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
      ],
      "properties": {
        "DefaultConnection": {
          "value": "[concat('@Microsoft.KeyVault(SecretUri=', variables('defaultConnectionStringSecretRef'), ')')]",
          "type": "SQLAzure"
        }
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2020-06-01",
      "name": "[parameters('apiAppServiceName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanPortalName'))]"
      ],
      "properties": {
        "siteConfig": "[variables('configReference')[parameters('language')]]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanPortalName'))]"
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2022-03-01",
      "name": "[concat(parameters('apiAppServiceName'), '/web')]",
      "location": "Central US",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('apiAppServiceName'))]"
      ],
      "properties": {

        "netFrameworkVersion": "v7.0"
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2019-08-01",
      "name": "[concat(parameters('apiAppServiceName'), '/appsettings')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('apiAppServiceName'))]",
        "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]"
      ],
      "properties": {
        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(concat('Microsoft.Insights/components/', variables('appInsightsName'))).InstrumentationKey]",
        "APPLICATIONINSIGHTS_CONNECTION_STRING": "[reference(concat('Microsoft.Insights/components/', variables('appInsightsName'))).ConnectionString]",
        "ApplicationInsightsAgent_EXTENSION_VERSION": "~2",
        "XDT_MicrosoftApplicationInsights_Mode": "default",
        "Authentication:Google:ClientId": "[concat('@Microsoft.KeyVault(SecretUri=', variables('keyVaultAuthGoogleClientIdSecretRef'), ')')]",
        "Authentication:Google:ClientSecret": "[concat('@Microsoft.KeyVault(SecretUri=', variables('keyVaultAuthGoogleClientSecretSecretRef'), ')')]",
        "IdentityServerAuthority": "[concat('https://',parameters('appServiceName'),'.azurewebsites.net')]"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2020-06-01",
      "name": "[parameters('identityServerAppServiceName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanPortalName'))]"
      ],
      "properties": {
        "siteConfig": "[variables('configReference')[parameters('language')]]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanPortalName'))]"
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2022-03-01",
      "name": "[concat(parameters('identityServerAppServiceName'), '/web')]",
      "location": "Central US",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('identityServerAppServiceName'))]"
      ],
      "properties": {

        "netFrameworkVersion": "v7.0"
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2019-08-01",
      "name": "[concat(parameters('identityServerAppServiceName'), '/appsettings')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('identityServerAppServiceName'))]",
        "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]"
      ],
      "properties": {
        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(concat('Microsoft.Insights/components/', variables('appInsightsName'))).InstrumentationKey]",
        "APPLICATIONINSIGHTS_CONNECTION_STRING": "[reference(concat('Microsoft.Insights/components/', variables('appInsightsName'))).ConnectionString]",
        "ApplicationInsightsAgent_EXTENSION_VERSION": "~2",
        "XDT_MicrosoftApplicationInsights_Mode": "default",
        "Authentication:Google:ClientId": "[concat('@Microsoft.KeyVault(SecretUri=', variables('keyVaultAuthGoogleClientIdSecretRef'), ')')]",
        "Authentication:Google:ClientSecret": "[concat('@Microsoft.KeyVault(SecretUri=', variables('keyVaultAuthGoogleClientSecretSecretRef'), ')')]",
        "WeatherWebApiBaseUrl": "[parameters('WeatherWebApiBaseUrl')]",
        "IdentityServerBaseUrl": "[parameters('IdentityServerBaseUrl')]",
        "AspnetWebAppClientSecret": "[concat('@Microsoft.KeyVault(SecretUri=', variables('keyVaultAspNetWebAppClientSecret'), ')')]"
      }
    }
  ],
  "outputs": {
    "keyVaultName": {
      "type": "string",
      "value": "[parameters('keyVaultName')]"
    },
    "appServiceName": {
      "type": "string",
      "value": "[parameters('appServiceName')]"
    },
    "webAppServiceObjectId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Web/sites', parameters('appServiceName')), '2019-08-01', 'full').identity.principalId]"
    },
    "webApiAppServiceObjectId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Web/sites', parameters('apiAppServiceName')), '2019-08-01', 'full').identity.principalId]"
    },
    "identityServerAppServiceObjectId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Web/sites', parameters('identityServerAppServiceName')), '2019-08-01', 'full').identity.principalId]"
    }
  }
}